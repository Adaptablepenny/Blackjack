#include <iostream>
#include <string>

#define HANDMAX 11
#define HANDMIN 1
#define COUNT 1






class hand {
public:
	hand()
	{
		runningTotal = 0;
		index = 0;
		for (int x = 0; x < 20; ++x)
		{
			Card[x] = 0;
		}
	}
	~hand()
	{
		Clear();
	}
	void AddCardToHand();
	void Clear();
	int Card[20];
	int index;
	int runningTotal;
	int ShowFirstCard()
	{
		return Card[0];
	}
};





void hand::AddCardToHand()
{
	Card[index] = (rand() % (HANDMAX - HANDMIN + 1)) + HANDMIN;
	runningTotal += Card[index];
	index++;
}


void hand::Clear()
{
	for (int x = 0; x < 20; ++x)
	{
		Card[x] = 0;
	}
	index = 0;
	runningTotal = 0;
}


void printHand(hand z)
{
	for (int i = 0; i < z.index; ++i)
	{
		std::cout << z.Card[i] << "\n";
	}
}


bool is_number(const std::string line)
{
	char* p;
	strtol(line.c_str(), &p, 10);
	return *p == 0;
}

void CharLowerCase(char* c)
{
	if (*c >= 'A' && *c <= 'Z')
		* c += 32;
}






int main()
{
	int sum;
	hand pHand;
	hand dHand;
	pHand.index = 0;
	pHand.Card[0] = 0;
	dHand.index = 0;
	dHand.Card[0] = 0;
	int playerCash = 1000;
	std::string userInput = "";
	int betCash = 0;
	//bool running = true;
	char pChoice;

	while (betCash == 0)
	{

		std::cout << "Your Wallet: " << playerCash << "\n";

		std::cout << "Enter bet: ";
		while (true)
		{
			std::cin >> userInput;
			if (is_number(userInput))
			{
				betCash = std::stoi(userInput);
				userInput = "";
				break;
			}
      
			std::cout << "Please enter a valid amount: ";
			//std::cin.clear();
			//std::cin.ignore();
		}



		while (betCash > 0)
		{

			if (betCash <= playerCash)
			{
				pHand.AddCardToHand();
				pHand.AddCardToHand();
				dHand.AddCardToHand();
				dHand.AddCardToHand();
				std::cout << "Dealer Shows a: " << std::to_string(dHand.ShowFirstCard()) << std::endl;
				playerCash = playerCash - betCash;
				std::cout << "You bet: " << betCash << "\n";
				std::cout << "Your wallet: " << playerCash << "\n";
				//sum = handTotal(pHand);
				while (true)
				{
					std::cout << "Your Hand: " << std::endl;
					printHand(pHand);
					std::cout << "Hand Value: " << pHand.runningTotal << std::endl;
					std::cout << "Would you like to (H)it, (S)tay, or (F)old? ";
					std::cin >> pChoice;
					CharLowerCase(&pChoice);

					if (pChoice == 'h')
					{
            if (pHand.runningTotal <= 21)
            {
              dHand.AddCardToHand();
						  std::cout << "Dealers Hand: " << std::endl;
					  	printHand(dHand);
						  std::cout << "Hand Value: " << dHand.runningTotal << std::endl;
              pHand.AddCardToHand();
            
            }
            else if(dHand.runningTotal >= 17)
            {
              std::cout << "Dealer stays \n";
              printHand(dHand);
              std::cout << "Hand Value: " << dHand.runningTotal << std::endl;
            }
            else if (dHand.runningTotal < 17 && pHand.runningTotal <= 21)
            {
              dHand.AddCardToHand();
						  std::cout << "Dealers Hand: " << std::endl;
					  	printHand(dHand);
						  std::cout << "Hand Value: " << dHand.runningTotal << std::endl;
            }
            else if (pHand.runningTotal > 21)
            {
            std::cout << "Your Hand: " << std::endl;
					  printHand(pHand);
				  	std::cout << "Hand Value: " << pHand.runningTotal << std::endl;
            std::cout << "Bust!" << std::endl;
            betCash == 0;
            pHand.Clear();
						dHand.Clear();
						break;
            }
            else
            {
              std::cout << "WTF BRO";
            }
            
					}
					else if (pChoice == 's')
					{
						//DEALERS TURN
            if(dHand.runningTotal >= 17)
            {
              std::cout << "Dealer stays \n";
              printHand(dHand);
              std::cout << "Hand Value: " << dHand.runningTotal << std::endl;
						
            }
            else 
            {
              dHand.AddCardToHand();
						  std::cout << "Dealers Hand: " << std::endl;
					  	printHand(dHand);
						  std::cout << "Hand Value: " << dHand.runningTotal << std::endl;
            }
					}

					else if (pChoice == 'f')
					{
						betCash = 0;
						pHand.Clear();
						dHand.Clear();
						break;
					}


				}
				betCash = 0;
			}

			else if (betCash > playerCash)
      {
        std::cout << "You don't have enough money! \n";
        break;
        
      }
			else
				std::cout << "error";
        break;
		}

	}
}
